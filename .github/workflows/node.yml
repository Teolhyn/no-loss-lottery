name: Build and Test

on:
  push:
    branches: ["main"]
  pull_request:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  CARGO_TERM_COLOR: always
  PKG_CONFIG_PATH: /usr/lib/pkgconfig

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    env:
      PUBLIC_STELLAR_NETWORK: ${{ secrets.PUBLIC_STELLAR_NETWORK }}
      PUBLIC_STELLAR_NETWORK_PASSPHRASE: ${{ secrets.PUBLIC_STELLAR_NETWORK_PASSPHRASE }}
      PUBLIC_STELLAR_RPC_URL: ${{ secrets.PUBLIC_STELLAR_RPC_URL }}
      PUBLIC_STELLAR_HORIZON_URL: ${{ secrets.PUBLIC_STELLAR_HORIZON_URL }}
      PUBLIC_USDC_ASSET_CODE: ${{ secrets.PUBLIC_USDC_ASSET_CODE }}
      PUBLIC_USDC_ASSET_ISSUER: ${{ secrets.PUBLIC_USDC_ASSET_ISSUER }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            runner/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: rustup target add wasm32v1-none
      - name: Start Stellar Quickstart
        uses: stellar/quickstart@main
        with:
          tag: testing
          network: local
      - run: sudo apt-get update && sudo apt-get install -y libudev-dev libdbus-1-dev pkg-config
      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@v1.15.6
      - name: Check for stellar-scaffold binary
        run: |
          if ! command -v stellar-scaffold &> /dev/null; then
            echo "stellar-scaffold not found, installing..."
            cargo binstall stellar-scaffold-cli
          else
            echo "stellar-scaffold already installed. Clear cache to force reinstall."
          fi
      - run: npm ci
      - name: Build clients before linting
        run: STELLAR_SCAFFOLD_ENV=development stellar-scaffold build --build-clients
      - run: npm run install:contracts
      - run: npm run lint
      - run: npx prettier . --check
      - run: npm run build
      - name: Run tests
        run: npm test --if-present
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
